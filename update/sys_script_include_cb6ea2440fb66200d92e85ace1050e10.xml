<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_44552_menu_das.MenuDashboard</api_name>
        <client_callable>true</client_callable>
        <description/>
        <name>MenuDashboard</name>
        <script><![CDATA[var MenuDashboard = Class.create();
MenuDashboard.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	TABLE_TILE: "x_44552_menu_das_tile",
	
	getDefaultMenus: function(){
		var result = [];
		
		var query = new GlideRecord("sys_app_application");
		query.addQuery("active","true");
		query.query();
		
		while(query.next()){
			var menu = {};
			menu.name = query.title.toString();
			menu.sys_id = query.sys_id.toString();
			menu.level = 1;
			menu.checked = false;
			menu.submenus = this._getMenus(menu.sys_id);
			result.push(menu);
		}
		
		return new global.JSON().encodeArray(result);
	},
	
	saveTiles: function(){
		var result = {
			success: false
		};
		
		var tiles = new global.JSON().decode(this.getParameter("sysparm_inputs"));
		
		for(var i=0; i<tiles.length; i++){
			var tile = tiles[i];
			var record = new GlideRecord("x_44552_menu_das_tile");
			record.name = tile;
			record.level = 1;
			record.insert();
		}
		
		result.success = true;
		return new global.JSON().encode(result);
	},
	
	deleteTile: function(){
		var result = {};
		try{
			
			var sys_id = this.getParameter("sys_id");
			
			var record = new GlideRecord("x_44552_menu_das_tile");
			if(record.get(sys_id)){
				record.deleteRecord();
			}
			
			result.success = true;
		}catch(exception){
			result.error = exception.message;
			result.success = false;
		}finally{
			return new global.JSON().encode(result);
		}
	},
	
	_getMenus: function(parent){
		var menus = [];
		var query = new GlideRecord("sys_app_module");
		query.addQuery("application", parent);
		query.addNotNullQuery("link_type!=SEPARATOR");
		query.query();
		
		while(query.next()){
			var menu = {};
			menu.name = query.title.toString();
			menu.sys_id = query.sys_id.toString();
			menu.level = 2;
			menus.push(menu);
		}
		
		return menus;
	},
	
	getTiles: function(){
		var tiles = [];
		var parent = this.getParameter("parent") ? this.getParameter("parent") : null;
		
		var query = new GlideRecord("x_44552_menu_das_tile");
		query.query();
		
		while(query.next()){
			var tile = {};
			tile.sys_id = query.sys_id.toString();
			tile.name = query.name.toString();
			tile.url = query.table.toString() + "_list.do";
			
			if(query.filter != ""){
				tile.url += "?sysparm_query=" + query.filter;
			}
			tile.editUrl = this.TABLE_TILE + ".do?sys_id=" + query.sys_id;
			tile.icon = query.icon.getDisplayValue().toString();
			tiles.push(tile);
		}
		
		return new global.JSON().encodeArray(tiles);
	},
	
	type: 'MenuDashboard'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-10-26 15:26:48</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>cb6ea2440fb66200d92e85ace1050e10</sys_id>
        <sys_mod_count>133</sys_mod_count>
        <sys_name>MenuDashboard</sys_name>
        <sys_package display_value="Menu - Dashboard" source="x_44552_menu_das">2d7cee8c0f766200d92e85ace1050ecc</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Menu - Dashboard">2d7cee8c0f766200d92e85ace1050ecc</sys_scope>
        <sys_update_name>sys_script_include_cb6ea2440fb66200d92e85ace1050e10</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2016-10-28 14:39:22</sys_updated_on>
    </sys_script_include>
</record_update>
